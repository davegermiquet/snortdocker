services:
  snort1:
    build:
      context: .
      dockerfile: Dockerfile_snort.Dockerfile
    networks:
      snort1:
        ipv4_address: 192.168.55.10
    cap_add:
      - NET_ADMIN
    command: >
      sh -c "ip route add 192.168.56.0/24 dev eth0 via 192.168.55.11; sleep 100000"
  snort2:
    build:
      context: .
      dockerfile: Dockerfile_snort.Dockerfile
    networks:
      snort2:
        ipv4_address: 192.168.56.10
    cap_add:
      - NET_ADMIN
    command: >
      sh -c "ip route add 192.168.55.0/24 dev eth0 via 192.168.56.11; sleep 100000"
  snort4:
    build:
      context: .
      dockerfile: Dockerfile_snort.Dockerfile
    networks:
      snort2:
        ipv4_address: 192.168.56.12
    cap_add:
      - NET_ADMIN
    command: >
      sh -c "ip route add 192.168.55.0/24 dev eth0 via 192.168.56.11; sleep 100000"
  snort3:
    build:
      context: .
      dockerfile: Dockerfile_snort.Dockerfile
    networks:
      snort2:
        ipv4_address: 192.168.56.11
      snort1:
        ipv4_address: 192.168.55.11
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    command: >
      sh -c "snort -Q --daq nfq --daq-var device=eth0  --daq-var proto=ip4 --daq-var queue=0 -c /etc/snort/snort.lua -R /etc/snort/rules/local.rules & \ 
      ip link set dev eth0 promisc on;iptables -t nat -A PREROUTING -i eth0 -j NFQUEUE --queue-bypass; \
      iptables -I FORWARD -i eth0  -j NFQUEUE --queue-bypass ;  \
      iptables -I INPUT -i eth0 -j NFQUEUE  --queue-bypass; \
      iptables -I OUTPUT -o eth0 -j NFQUEUE --queue-bypass; touch /tmp/alert_fast.txt;tail -f /tmp/alert_fast.txt"
networks:
  snort1:
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
  snort2:
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 192.168.56.0/24
          gateway: 192.168.56.1
